// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import db "github.com/percona/dcos-mongo-tools/internal/db"
import pod "github.com/percona/dcos-mongo-tools/internal/pod"
import mock "github.com/stretchr/testify/mock"

// Task is an autogenerated mock type for the Task type
type Task struct {
	mock.Mock
}

// GetMongoAddr provides a mock function with given fields:
func (_m *Task) GetMongoAddr() (*db.Addr, error) {
	ret := _m.Called()

	var r0 *db.Addr
	if rf, ok := ret.Get(0).(func() *db.Addr); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*db.Addr)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMongoReplsetName provides a mock function with given fields:
func (_m *Task) GetMongoReplsetName() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IsRunning provides a mock function with given fields:
func (_m *Task) IsRunning() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsTaskType provides a mock function with given fields: taskType
func (_m *Task) IsTaskType(taskType pod.TaskType) bool {
	ret := _m.Called(taskType)

	var r0 bool
	if rf, ok := ret.Get(0).(func(pod.TaskType) bool); ok {
		r0 = rf(taskType)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *Task) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
